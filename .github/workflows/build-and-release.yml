name: Build and Release APK

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17 for Android SDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: 'platform-tools'
        accept-android-sdk-licenses: true

    - name: Install additional Android SDK components
      run: |
        yes | sdkmanager --licenses
        sdkmanager "platforms;android-30"
        sdkmanager "build-tools;30.0.3"
        sdkmanager "ndk;21.4.7075529"

    - name: Set up JDK 11 for Gradle build
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Cache Android dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.android/build-cache
          ~/.android/cache
        key: ${{ runner.os }}-android-${{ hashFiles('**/build.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-android-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Create keystore for signing
      run: |
        keytool -genkey -v -keystore keystore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias mykey -storepass android -keypass android -dname "CN=UserLAnd, OU=Dev, O=UserLAnd, L=City, S=State, C=US"

    - name: Build Release APK
      run: ./gradlew assembleRelease --warning-mode all
      env:
        ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_KEY_ALIAS: mykey
        ANDROID_STORE_PASSWORD: android
        ANDROID_KEY_PASSWORD: android

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 90

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Release APK
      uses: actions/download-artifact@v4
      with:
        name: app-release
        path: ./release-apk

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./release-apk/app-release.apk
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-to-github-pages:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Release APK
      uses: actions/download-artifact@v4
      with:
        name: app-release
        path: ./release-apk

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./release-apk

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4